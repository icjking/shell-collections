#!/bin/bash
###################################
# docker(tag自动识别)启动脚本
# 依赖安装: sudo yum install jq
# Created by cjking on 2020/07/08.
###################################

IMAGE=$1

SYSTEM=""

# 导入日志脚本
source ./.log.sh

function Usage() {
	log "\nUsage: docker-run NAME\n"
	log "docker-run list all tags for docker image on a remote registry.\n"
	log "Example:"
	log "\tsh docker-run project-name"
	log "\tsh docker-run project-name2\n"
}

ARG=$1

if [[ "$ARG" =~ "-h" ]] || [ -z "$ARG" ]; then
	Usage
	exit 0
fi

log "IMAGE is: ${IMAGE}"
log "SYSTEM is: ${SYSTEM}"

if [ -z "$IMAGE" ]; then
	log "docker镜像名称不能为空!"
	log "命令格式: sh docker-tags project-name"
	exit 100
fi

# ~/.netrc
# chmod 600 ~/.netrc
# 文件格式：machine host.domain.com login username password secret
# 格式释义："login" 和 "password" 只是关键字；实际信息是这些关键字之后的内容
# machine docker-registry.example.cn login username password secret
# 使用：

ret=$(curl -s --netrc-file ~/.netrc https://docker-registry.fmock.cn/v2/"${IMAGE}"/tags/list)
tag_list=$(echo "$ret" | jq '.tags')

# shellcheck disable=SC2207
array=($(echo "$tag_list" | tr -d '[],"'))

function handleSelect() {
	list=$1
	log "请选择？"
	select version in "${list[@]}"; do
		log "您选择的tag版本是: $version"
		if [ "$IMAGE" == "project-name" ]; then
			log "开始更新name1..."
			sh .docker-run-name1 "$IMAGE" "$version"
		elif [ "$IMAGE" == "project-name2" ]; then
			log "开始更新name2..."
			sh .docker-run-name2 "$IMAGE" "$version"
		fi
		break
	done
}

list=()
for element in "${array[@]}"; do
	list[${#list[@]}]=$element
done

# shellcheck disable=SC2128
handleSelect "$list"
